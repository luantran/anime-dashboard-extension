name: Run Vitest on Push/PR

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      #  Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js (use same version as local dev)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      #  Install dependencies
      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage + JUnit output
        run: |
          npx vitest run --coverage --reporter=default --reporter=junit --outputFile=./test-results/junit-results.xml | tee test-output.txt
        # Make sure your vitest.config.js is aligned with this output path.

      - name: Upload test results to GitHub
        uses: dorny/test-reporter@v2
        if: always()
        with:
          name: Unit Tests
          path: ./test-results/junit-results.xml
          reporter: jest-junit
          fail-on-error: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          fail_ci_if_error: true

      - name: ðŸ“Š Add Coverage Summary to GitHub UI
        if: always()
        run: |
          echo "# Test and Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ ! -f coverage/coverage-summary.json ]; then
            echo "coverage-summary.json not found" >> $GITHUB_STEP_SUMMARY
            exit 0
          fi

          # Extract values from your JSON structure
          LINES=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          STMT=$(jq '.total.statements.pct' coverage/coverage-summary.json)
          FUNCS=$(jq '.total.functions.pct' coverage/coverage-summary.json)
          BRANCHES=$(jq '.total.branches.pct' coverage/coverage-summary.json)

          # Display the data as a Markdown table
          echo "## Coverage Overview" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Coverage |" >> $GITHUB_STEP_SUMMARY
          echo "|:--------|---------:|" >> $GITHUB_STEP_SUMMARY
          echo "| Statements | ${STMT}% |" >> $GITHUB_STEP_SUMMARY
          echo "| Branches | ${BRANCHES}% |" >> $GITHUB_STEP_SUMMARY
          echo "| Functions | ${FUNCS}% |" >> $GITHUB_STEP_SUMMARY
          echo "| Lines | ${LINES}% |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Include Codecov badge and link for details
          echo "![Coverage Badge](https://codecov.io/gh/luantran/anime-dashboard-extension/branch/dev/graph/badge.svg)" >> $GITHUB_STEP_SUMMARY
          echo "[View detailed report on Codecov â†’](https://app.codecov.io/gh/luantran/anime-dashboard-extension)" >> $GITHUB_STEP_SUMMARY
